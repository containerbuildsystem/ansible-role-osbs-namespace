---
osbs_openshift_home: /var/lib/origin
osbs_kubeconfig_path: /etc/origin/master/admin.kubeconfig
osbs_generated_config_path: /tmp

osbs_environment:
  KUBECONFIG: "{{ osbs_kubeconfig_path }}"

osbs_is_admin: true

osbs_service_accounts: []

osbs_cpu_limitrange: ''
osbs_memory_limitrange: ''

osbs_admin_groups: []
osbs_admin_users: []
osbs_cluster_reader_groups: []
osbs_cluster_reader_users: []
osbs_readonly_groups: []
osbs_readonly_users: []
osbs_readwrite_groups: []
osbs_readwrite_users: []

osbs_orchestrator: false
osbs_worker_clusters: {}

osbs_build_json_dir: /usr/share/osbs
osbs_nodeselector: ''
osbs_buildroot_repository: ''
osbs_buildroot_imagestream: ''
osbs_insecure_repository: true
osbs_buildroot_imagestream_live_tag: ''

osbs_reactor_config_maps: []

osbs_cronjob_api_version: batch/v2alpha1
osbs_pruner_builds_keep_complete: 1
osbs_pruner_builds_keep_younger: '72h'
osbs_pruner_config_maps_days_old: 1
osbs_pruner_istags_days_old: 1
osbs_pruner_pods_days_old: 1
osbs_pruner_schedule_build: "0 0 * * *"
osbs_pruner_schedule_imagestreams: "0 1 * * 0"
osbs_pruner_schedule_pods: "0 2 * * *"
osbs_pruner_schedule_istags: "0 3 * * *"
osbs_pruner_schedule_configmaps: "0 3 * * *"
osbs_pruner_schedule_buildconfigs: "0 3 * * 0"
osbs_pruner_successful_jobs: 5
osbs_pruner_failed_jobs: 5
osbs_pruner_build_clusterrole_read: system:openshift:controller:build-config-change-controller
osbs_pruner_build_role_delete: edit

# You need to provide an image that contains oc and jq commands
osbs_pruner_custom_image: ''

osbs_pruner_command_build:
- /bin/bash
- -c
- "{{ lookup('template', 'prune-builds.sh.j2') }}"

osbs_pruner_command_istags:
- /bin/bash
- -c
- "{{ lookup('template', 'prune-istags.sh.j2') }}"

osbs_pruner_command_pods:
- /bin/bash
- -c
- "{{ lookup('template', 'prune-pods.sh.j2') }}"

osbs_pruner_command_configmaps:
- /bin/bash
- -c
- "{{ lookup('template', 'prune-config-maps.sh.j2') }}"

osbs_pruner_command_buildconfigs:
- /bin/bash
- -c
- "{{ lookup('template', 'prune-build-configs.sh.j2') }}"

osbs_pruner_command_imagestreams:
- /bin/bash
- -c
- "{{ lookup('template', 'prune-imagestreams.sh.j2') }}"
